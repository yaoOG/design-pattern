###1.定义
 **访问者模式将操作与其操作的对象结构分开， 允许添加新操作而不更改结构类。**
###2.结构图
![image-20191213105931333](etc/state.png)
###3.角色
1) Element（元素）：表示对象结构的基类。结构中的所有类都是它派生的
2) ConcreteElementA(具体元素A)和ConcreteElementB（具体元素B）：这是我们想要添加在Visitor类中实现的外部操作的具体类。
3) Visitor访问者：这是基本的Visitor类，为该对象结构中ConcreteElement的每一个类声明一个Visit操作。
4) ConcreteVisiitor1和ConcreteVisiitor2：具体访问者，实现每个由Visitor声明的操作。

###4.目的
1) 要把处理从数据结构中分离出来

###5.优点
1) 增加新的访问操作十分方便，符合开闭原则；
2) 将有关元素对象的访问行为集中到一个访问者对象中，而不是分散在一个个的元素类中，类的职责更加清晰，符合单一职责原则

###6.缺点： 
1) 增加新的元素类很困难，需要在每一个访问者类中增加相应访问操作代码，这违背了开闭原则；
2) 元素对象有时候必须暴露一些自己的内部操作和状态，否则无法供访问者访问，这破坏了元素的封装性。